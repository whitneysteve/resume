{"version":3,"sources":["contact/Contact.js","experience/Experience.js","education/Education.js","landing/Landing.js","location/Map.js","location/Location.js","floaty/Floaty.js","tabs/Tabs.js","skills/Skills.js","app/App.js","index.js"],"names":["Contact","className","id","CONTACTS","map","genContact","Component","contact","href","link","key","service","target","sameWindow","rel","alt","src","logo","Experience","props","state","selected","CURRENT","handleScroll","bind","highlightJob","elements","position","closest","minDiff","forEach","element","diff","Math","abs","offsetTop","e","currentTopPosition","document","scrollingElement","documentElement","scrollTop","nearsetJob","this","closestElement","Array","from","querySelectorAll","setState","jobId","window","addEventListener","removeEventListener","JOBS","genJob","job","company","blurbs","genBlurb","terms","genTerm","term","blurb","Education","renderEducation","EDUCATION","renderQualication","qualification","course","school","grade","year","JobDescriptions","0","1","2","3","4","5","6","7","Landing","jobIndex","start","handleKeyDown","event","keyCode","componentDidMount","componentWillUnmount","defaultProps","floor","random","Map","removeScrollListener","scrollY","expand","bootstrapURLKeys","defaultCenter","center","defaultZoom","zoom","lat","lng","Location","aria-label","role","Floaty","numLayers","keys","_","idx","aria-hidden","Tabs","context","select","newSelection","React","Children","children","child","index","cloneElement","renderTabs","renderContent","Tab","onClick","preventDefault","title","Skills","selection","SKILLS","genSkillEraTab","era","skills","genSkillRow","outdated","skill","stars","genStars","numStars","numFilledStars","genStar","filled","App","resume","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.74b99d7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n/**\n * Education renders my contact details.\n */\nclass Contact extends Component {\n  render() {\n    return (\n      <div className=\"Section\" id=\"contact\">\n        <h1>Contact</h1>\n        <div className=\"contact-container\">\n          <div className=\"contact-container-text\">\n            <p>\n              I like it, online, and I’ve worked with remote teams most of my career.\n            </p>\n            <p>\n              But I have a fairly minimal online presence.\n            </p>\n            <p>\n              I’d like to think I’m moving towards quality, not quantity.\n            </p>\n            <p>\n              It’s a process.\n            </p>\n          </div>\n          <div className=\"contact-container-icons\">\n            { CONTACTS.map(genContact) }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst genContact = (contact) => {\n  return (\n    <a href={contact.link} key={contact.service} target={contact.sameWindow ? \"_self\" : \"_blank\"} rel=\"noreferrer\">\n      <img alt={`${contact.service} Logo`} src={contact.logo} />\n    </a>\n  );\n};\n\nconst CONTACTS = [\n  {\n    link: \"mailto: steve.whitney.cv@gmail.com\",\n    logo: \"img/gmail.svg\",\n    sameWindow: \"true\",\n    service: \"Gmail\"\n  },\n  {\n    link: \"https://join.skype.com/eyeCmLRyJisN\",\n    logo: \"img/skype.svg\",\n    service: \"Skype\"\n  },\n  {\n    link: \"https://www.linkedin.com/in/whitneysteve/\",\n    logo: \"img/linkedin.svg\",\n    service: \"LinkedIn\"\n  },\n  {\n    link: \"http://github.com/whitneysteve\",\n    logo: \"img/github.svg\",\n    service: \"Github\"\n  },\n  {\n    link: \"https://twitter.com/whitneysteve\",\n    logo: \"img/twitter.svg\",\n    service: \"Twitter\"\n  }\n];\n\nexport default Contact;\n","import React, { Component } from 'react';\n\n/**\n * Experience renders my previous jobs.\n */\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: CURRENT\n    }\n\n    this.handleScroll = this.handleScroll.bind(this);\n    this.highlightJob = this.highlightJob.bind(this);\n  }\n\n  /**\n   * Find the element closest to the specified position.\n   *\n   * @param {Array} elements\n   * @param {Number} position\n   */\n  closestElement(elements, position) {\n    let minDiff = 999999;\n    let closest;\n\n    elements.forEach(element => {\n      const diff = Math.abs(position - element.offsetTop);\n      if (diff < minDiff) {\n        minDiff = diff;\n        closest = element;\n      }\n    });\n\n    return closest;\n  }\n\n  /**\n   * Handle a scroll event in the case the highlighted job needs to be changed.\n   *\n   * @param {Object} e the scroll event that caused this invocation.\n   */\n  handleScroll(e) {\n    const documentElement = document.scrollingElement || document.documentElement;\n    const currentTopPosition = documentElement.scrollTop;\n\n    // Find the element closest to the top of the screen.\n    const nearsetJob = this.closestElement(\n      Array.from(document.querySelectorAll('.experience-job')),\n      currentTopPosition\n    );\n\n    if (nearsetJob && nearsetJob.id && nearsetJob.id !== this.state.selected) {\n      this.setState({ selected: nearsetJob.id });\n    }\n  }\n\n  /**\n   * Highlight a job to give it prominence over the others.\n   *\n   * @param {String} jobId the ID of the job that should currently be highlighted.\n   */\n  highlightJob(jobId) {\n    this.setState({ selected: jobId });\n  }\n\n  /**\n   * Latch onto scroll events so we can update the job background.\n   */\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  /**\n   * Remove the listener to scroll events created when component was mounted.\n   */\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    return (\n      <div className={`Section ${this.state.selected} experience`} id=\"experience\">\n        <h1>Experience</h1>\n        <div>\n          { JOBS.map(genJob) }\n          <div className=\"experience-footer\">\n            This just a selection. Please get in touch for a full C.V.\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n   * Genreate the markup for a job and attach hover events to update the\n   * background.\n   *\n   * @param {Object} job the job configuration.\n   */\n  const genJob = (job) => {\n    return (\n      <div className=\"experience-job\" id={ job.id } key={ job.company }>\n        <div className=\"experience-job-company\">\n          <h3>{ job.company } <img alt={ `${ job.company } logo` } src={ job.logo } /> </h3>\n\n        </div>\n        <h4>\n          { job.position }\n        </h4>\n        { job.blurbs.map(genBlurb) }\n        { job.terms.map(genTerm) }\n      </div>\n    );\n  };\n\n/**\n * Generate the markup for a term spent at a job.\n *\n * @param {String} term the length of time worked at the job.\n */\nconst genTerm = (term) => {\n  return <sub key={term}>{term}</sub>;\n};\n\n/**\n * Generate the markup for a blurb about a job.\n *\n * @param {string} blurb a short description of the job.\n */\nconst genBlurb = (blurb) => {\n  return <p key={blurb}>{blurb}</p>;\n};\n\nconst CURRENT = \"twitter\";\n\nconst JOBS = [\n  {\n    id: \"intercom\",\n    company: \"Intercom\",\n    position: \"Software Engineer\",\n    terms: [\n      \"2021 - Present\"\n    ],\n    blurbs: [\n      \"I recently joined Intercom to work on their Growth teams.\",\n    ],\n    logo: \"img/stripe_background.svg\"\n  },\n  {\n    id: \"stripe\",\n    company: \"Stripe\",\n    position: \"Software Engineer\",\n    terms: [\n      \"2018 - 2021\"\n    ],\n    blurbs: [\n      \"Working as a full-stack engineer on Stripe's Security Products, building great products to keep our users safe.\",\n      \"At Stripe I've been fortunate enough to work between writing distributed services and message consumers in Ruby and Java and building, great user experiences in React.\",\n    ],\n    logo: \"img/stripe_background.svg\"\n  },\n  {\n    id: \"twitter\",\n    company: \"Twitter\",\n    position: \"Software Engineer\",\n    terms: [\n      \"2013 - 2018\"\n    ],\n    blurbs: [\n      \"Twitter is my favourite website and I’m very lucky to have had the opportunity to work and learn here.\",\n      \"Mostly backend engineering on low and high throughput applications, from Ruby to Scala, from monoliths to micro services, and Hadoop.\",\n      \"Built web-apps in React when I could.\"\n    ],\n    logo: \"img/twitter_background.svg\"\n  },\n  {\n    id: \"mastercard\",\n    company: \"MasterCard Labs\",\n    position: \"Consultant Software Engineer\",\n    terms: [\n      \"2012 - 2013\"\n    ],\n    blurbs: [\n      \"Researching emerging technologies and trends to create prototypes and other innovations for MasterCard’s next and future generation of products.\",\n      \"Had to pleasure of launching several new, multi-platform services to prototype, pilot, beta and full production.\"\n    ],\n    logo: \"img/mastercard_background.svg\"\n  },\n]\n\nexport default Experience;\n","import React, { Component } from 'react';\n\n/**\n * Education renders my college degrees.\n */\nclass Education extends Component {\n  render() {\n    return (\n      <div className=\"Section\" id=\"education\">\n        <h1>Education</h1>\n        { renderEducation() }\n      </div>\n    );\n  }\n}\n\nconst renderEducation = () => {\n  return (\n    <div className=\"education-container\">\n      { EDUCATION.map(renderQualication) }\n    </div>\n  );\n};\n\nconst renderQualication = (qualification) => {\n  return (\n    <div className=\"education-container-qualification\" key={ qualification.course }>\n      <div className=\"education-container-qualification-logo\">\n        <img alt={`${qualification.school} Logo`} src={ qualification.logo } />\n      </div>\n      <div className=\"education-container-qualification-school\">\n        { qualification.school }\n      </div>\n      <div className=\"education-container-qualification-course\">\n        { qualification.course }\n      </div>\n      <div className=\"education-container-qualification-result\">\n        { qualification.grade }\n      </div>\n      <div className=\"education-container-qualification-year\">\n        { qualification.year }\n      </div>\n    </div>\n  );\n};\n\nconst EDUCATION = [\n  {\n    course: \"B.Sc, Computer Applications\",\n    grade: \"1st Class Honours\",\n    logo: \"img/dcu.svg\",\n    school: \"Dublin City University\",\n    year: \"2005\"\n  },\n  {\n    course: \"M.Bs, Information Systems\",\n    grade: \"1st Class Honours\",\n    logo: \"img/ucd.svg\",\n    school: \"Smurfit Graduate Business School\",\n    year: \"2007\"\n  }\n];\n\nexport default Education;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nconst JobDescriptions = {\n  0: 'Sweet explorer',\n  1: 'Lost',\n  2: 'Looks cool in sunglasses',\n  3: 'Software engineer',\n  4: 'Waiting for the bus',\n  5: 'Software engineer',\n  6: 'Holding the umbrella',\n  7: 'Software engineer',\n}\n\nconst MaxLandings = 7;\nconst LeftKey = 37;\nconst RightKey = 39;\n\n/**\n * Landing renders the top of the site, with my face on it.\n */\nclass Landing extends Component {\n  static defaultProps = {\n    start: Math.floor(Math.random() * 8)\n  };\n\n  state = {jobIndex: this.props.start};\n\n  handleKeyDown = (event) => {\n    let jobIndex = this.state.jobIndex;\n    if (event.keyCode === LeftKey) {\n      if (jobIndex === 0) {\n        jobIndex = MaxLandings;\n      } else {\n        jobIndex--;\n      }\n    } else if (event.keyCode === RightKey) {\n      if (jobIndex >= MaxLandings) {\n        jobIndex = 0;\n      } else {\n        jobIndex++;\n      }\n    }\n    if (jobIndex !== this.state.jobIndex){\n      this.setState({jobIndex});\n    }\n  }\n\n  componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    const {jobIndex} = this.state;\n    return (\n      <div className=\"Section\" id=\"landing\">\n        <div className={`landing-container landing-${jobIndex}`}>\n          <h2>Stephen Whitney</h2>\n          <h3>{JobDescriptions[jobIndex]}</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  start: PropTypes.number,\n};\n\nexport default Landing;\n","import GoogleMapReact from \"google-map-react\"\nimport React, { Component } from 'react';\n\nclass Map extends Component {\n  // Dublin\n  static defaultProps = {\n    center: {\n      lat: 53.349,\n      lng: -6.260\n    },\n    zoom: 5\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  };\n\n  componentWillUnmount() {\n    this.removeScrollListener();\n  };\n\n  removeScrollListener() {\n    window.removeEventListener('scroll', this.handleScroll);\n  };\n\n  handleScroll(event) {\n    if (window.scrollY > 50) {\n      this.setState({expand: true});\n      this.removeScrollListener();\n    }\n  };\n\n  render() {\n    return (\n      <div className={this.state && this.state.expand ? \"map map-expanded\" : \"map\"}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyC87jefYvUwpJ45N4Dxo_o7Cg0tjvZtcck\" }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}>\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default Map;\n","import Map from './Map'\nimport React, { Component } from 'react';\n\n/**\n * Landing renders the blurb about my location and the map story.\n */\nclass Location extends Component {\n  render() {\n    return (\n      <div className=\"Section\" id=\"location\">\n        <h1>Location</h1>\n        <p>\n          I’m a software engineer based in Dublin, Ireland <span aria-label=\"Ireland Flag\" role=\"img\"> 🇮🇪</span>\n        </p>\n        <Map />\n        <p>\n          I've been fortunate enough to work directly with great people based from San Francisco to Singapore.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Location;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\n/**\n * Renders a floaty thing.\n */\nclass Floaty extends Component {\n  static defaultProps = {\n    numLayers: 3\n  };\n\n  render() {\n    return (\n      <div className=\"floaty-container\">\n        {\n          [...Array(this.props.numLayers).keys()].map((_, idx) =>\n            <div aria-hidden=\"true\" className={`floaty-${idx+1}`} key={`floaty-${idx}`} />\n          )\n        }\n        <div aria-hidden=\"true\" className=\"floaty-background\"/>\n      </div>\n    );\n  }\n}\n\nFloaty.propTypes = {\n  numLayers: PropTypes.number\n};\n\nexport default Floaty;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\n/**\n * The Tabs component renders a number of tabs and shows/hides the content of each tab based on the\n * user's selection.\n */\nclass Tabs extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.state = {\n          selected: 0\n      }\n\n      this.select = this.select.bind(this);\n    }\n\n    /**\n     * Select a new tab.\n     *\n     * @param {Number} newSelection the index of the new selection.\n     */\n    select(newSelection) {\n      this.setState( { selected: newSelection } );\n    }\n\n    /**\n     * Render the tabs for user selection.\n     */\n    renderTabs() {\n      return React.Children.map(this.props.children, (child, index) => {\n        return React.cloneElement(child, {\n          select : this.select,\n          index: index,\n          selected: index === this.state.selected\n        });\n      });\n    }\n\n    /**\n     * Render the content of the selected tab.\n     */\n    renderContent() {\n      const children = this.props.children;\n      const selected = this.state.selected;\n      if(children[selected]) {\n          return children[selected].props.children;\n      }\n    }\n\n    render() {\n      return (\n        <div className=\"tabs\">\n          <div className=\"tabs-navigation\">\n            {this.renderTabs()}\n          </div>\n          <div className=\"tabs-content\">\n            {this.renderContent()}\n          </div>\n        </div>\n      );\n    }\n}\n\n/**\n * Tabs contains multiple Tab elements.\n */\nclass Tab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.select = this.select.bind(this);\n  }\n\n  /**\n   * Select the current tab.\n   */\n  select() {\n    this.props.select(this.props.index);\n  }\n\n  render() {\n    return (\n      <button className={\"tabs-tab \" + (this.props.selected ? \"active\" : \"\")} onClick={(e) => {\n          e.preventDefault();\n          this.select();\n      }}>\n        {this.props.title}\n      </button>\n    );\n  }\n}\n\nTab.propTypes = {\n  select: PropTypes.func,\n  selected: PropTypes.bool,\n  title: PropTypes.string\n};\n\nexport { Tabs, Tab };","\nimport Floaty from '../floaty/Floaty';\nimport React, { Component } from 'react';\nimport { Tabs, Tab } from '../tabs/Tabs';\n\n/**\n * Skills renders the current and past skills section.\n */\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newSelection: \"Today\"\n    };\n  }\n\n  setState(newSelection) {\n    this.setState({ selection: newSelection });\n  }\n\n  render() {\n    return (\n      <div className=\"Section\" id=\"skills\">\n        <h1>Skills</h1>\n        <Floaty numLayers={3} />\n        <Tabs>\n          { SKILLS.map(genSkillEraTab) }\n        </Tabs>\n        <div>\n          <div className=\"skills-tempo-container\">\n            <div className=\"skills-text-container\">\n              <p>\n                I can usually go from zero to 2 or 3 stars pretty quickly.\n              </p>\n              <p>\n                The time it takes me to get to 4 or 5 stars depends on frequency, scope of work and teamwork.\n              </p>\n              <p>\n                I like to help others get <span aria-label=\"stars\" role=\"img\">⭐️️</span> too <span aria-label=\"Heart\" role=\"img\">❤️</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * Generates a Tab element for an era of skills.\n *\n * @param {Object} era the skill to render.\n * @returns the Tab JSX element.\n */\nconst genSkillEraTab = (era) => {\n  return (\n    <Tab key={era.title} title={era.title}>\n      <div className=\"skills-container\">\n        { era.skills.map(genSkillRow) }\n        { era.outdated &&\n            <div className=\"skills-container-skill\">\n              <div className=\"skills-container-skill-name\">Out of practice</div>\n              <div className=\"skills-container-skill-rating skills-container-skill-outdated\">{ era.outdated }</div>\n            </div>\n        }\n      </div>\n    </Tab>\n  );\n};\n\n/**\n * Generate a row that contains the skill name and it's rating.\n *\n * @param {Object} skill the skill to render.\n */\nconst genSkillRow = (skill) => {\n  return (\n    <div className=\"skills-container-skill\" key={skill.title}>\n      <div className=\"skills-container-skill-name\">{ skill.title }</div>\n      <div\n        aria-label={ skill.stars + \" stars\" }\n        className=\"skills-container-skill-rating\">\n        { genStars(5, skill.stars) }\n      </div>\n    </div>\n  );\n};\n\n/**\n * Generate a row of stars.\n *\n * @param {Number} numStars of stars to render.\n * @param {Number} numFilledStars of stars to render.\n */\nconst genStars = (numStars, numFilledStars) => {\n  return (\n    <div className=\"stars\">\n      {\n        [...Array(numFilledStars).keys()].map(key => {\n          return genStar(true, key);\n        })\n      }\n      {\n        [...Array(numStars - numFilledStars).keys()].map(key => {\n          return genStar(false, key);\n        })\n      }\n    </div>\n  );\n};\n\n/**\n * Generate a star.\n *\n * @param {Boolean} filled whther the star is filled or hollow.\n * @param {String} key optional key for adding multiple stars in a row.\n */\nconst genStar = (filled, key) => {\n  return <i\n    aria-label=\"Gold star\"\n    className={filled? \"fas fa-star\" : \"far fa-star\"}\n    key={key}\n    role=\"presentation\"></i>;\n};\n\nconst SKILLS = [\n  {\n    title: \"Today\",\n    skills: [\n      { title: \"Ruby\", stars: 5 },\n      { title: \"Javascript & CSS\", stars: 4 },\n      { title: \"Java\", stars: 3 },\n      { title: \"Scala\", stars: 3 },\n      { title: \"Go\", stars: 2 },\n    ],\n    outdated: \"Objective-C, Python\"\n  },\n  {\n    title: \"2020\",\n    skills: [\n      { title: \"Java\", stars: 5 },\n      { title: \"Ruby\", stars: 4 },\n      { title: \"Javascript & CSS\", stars: 3 },\n      { title: \"Scala\", stars: 3 },\n      { title: \"Go\", stars: 2 },\n    ],\n    outdated: \"Objective-C, Python\"\n  },\n  {\n    title: \"2018\",\n    skills: [\n      { title: \"Scala\", stars: 5 },\n      { title: \"Ruby\", stars: 4 },\n      { title: \"Javascript & CSS\", stars: 3 },\n      { title: \"Python\", stars: 2 },\n    ],\n    outdated: \"Java, Objective-C\"\n  },\n  {\n    title: \"2016\",\n    skills: [\n      { title: \"Ruby\", stars: 4 },\n      { title: \"Javascript & CSS\", stars: 4 },\n      { title: \"Scala\", stars: 3 },\n\n    ],\n    outdated: \"Java, Objective-C\"\n  },\n];\n\nexport default Skills;\n","import Contact from '../contact/Contact'\nimport Experience from '../experience/Experience'\nimport Education from '../education/Education'\nimport Landing from '../landing/Landing'\nimport Location from '../location/Location'\nimport React, { Component } from 'react';\nimport Skills from '../skills/Skills'\n\n/**\n * The main driver and parent container for the app.\n */\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      resume: false\n    };\n  }\n\n  render() {\n    return (\n      <div className={\"App \" + (this.state.resume ? \"\" : \"non-resume\") }>\n        <div>\n          <Landing />\n          <Location />\n        </div>\n        <Skills />\n        <Experience />\n        <Education />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import './index.css';\n\nimport App from './app/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Hide gret selection boxes on mobile\ndocument.addEventListener(\"touchstart\", function(){}, true);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}