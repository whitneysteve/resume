{"version":3,"sources":["contact/Contact.js","devgrid/Devgrid.js","img/education/dcu.svg","img/education/ucd.svg","education/Education.js","3rdparty/Gradient.js","img/companies/intercom.svg","img/companies/stripe.svg","img/companies/twitter.svg","img/companies/mastercard.svg","experience/Experience.js","header/Header.js","learning/Learning.js","location/Map.js","location/Location.js","floaty/Floaty.js","img/languages/golang.svg","img/languages/java.svg","img/languages/js.svg","img/languages/python.svg","img/languages/ruby.svg","img/languages/scala.svg","tabs/Tabs.js","skills/Skills.js","app/App.js","index.js"],"names":["genContact","Component","contact","href","link","target","sameWindow","rel","alt","service","src","logo","CONTACTS","Devgrid","window","addEventListener","drawMeasurements","removeEventListener","forEach","position","elements","document","getElementsByClassName","element","innerHTML","parentElement","offsetWidth","offsetHeight","getElementRectangles","parentRect","targetRect","firstY","top","height","secondY","distance","Math","abs","round","updateElement","left","updateBottomLeftCornerDownMargins","updateTopLeftCornerLeftMargins","console","log","width","updateCenterUpMargins","target1","getElementById","dataset","targetOne","target1Parent","target2","targetTwo","target1Rect","getBoundingClientRect","target1ParentRect","target2Rect","firstX","right","secondX","updateBetweens","style","display","parent","Education","className","id","renderEducation","EDUCATION","map","renderQualication","qualification","school","course","grade","year","dcu","ucd","normalizeColor","hexCode","reduce","t","n","Object","assign","MiniGl","canvas","debug","_miniGl","this","debug_output","location","search","toLowerCase","indexOf","gl","getContext","antialias","meshes","context","setSize","lastDebugMsg","e","Date","toLocaleTimeString","Array","max","length","join","from","arguments","slice","defineProperties","Material","enumerable","value","vertexShaders","fragments","uniforms","material","getShaderByType","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","getUniformVariableDeclarations","entries","uniform","getDeclaration","uniformInstances","prefix","vertexSource","commonUniforms","Source","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","attachUniforms","name","i","push","getUniformLocation","Uniform","typeFn","float","int","vec2","vec3","vec4","mat4","update","transpose","excludeFrom","name_no_prefix","replace","charAt","toUpperCase","PlaneGeometry","orientation","createBuffer","attributes","Attribute","ARRAY_BUFFER","size","uv","uvNorm","index","ELEMENT_ARRAY_BUFFER","UNSIGNED_SHORT","setTopology","xSegCount","ySegCount","vertexCount","quadCount","values","Float32Array","Uint16Array","s","geometry","o","r","segment_width","segment_height","yIndex","xIndex","l","Mesh","mesh","wireframe","attributeInstances","attribute","attach","use","drawElements","LINES","TRIANGLES","filter","FLOAT","normalized","buffer","bindBuffer","bufferData","STATIC_DRAW","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","a","projectionMatrix","modelViewMatrix","resolution","aspectRatio","viewport","clearColor","clearDepth","draw","object","propertyName","val","defineProperty","configurable","writable","Gradient","clearTimeout","scrollingTimeout","setTimeout","handleScrollEnd","scrollingRefreshDelay","isGradientLegendVisible","hideGradientLegend","conf","playing","isScrolling","pause","isIntersecting","play","innerWidth","minigl","setOrthographicCamera","ceil","density","u_shadow_power","isMetaKey","metaKey","isMouseDown","requestAnimationFrame","animate","shouldSkipFrame","min","last","u_time","render","isStatic","disconnect","isLoadedClass","el","classList","add","selector","querySelector","connect","shaderFiles","vertex","noise","blend","fragment","presetName","zoom","rotation","querySelectorAll","computedCanvasStyle","getComputedStyle","waitForCssVars","scrollObserver","handleScroll","handleMouseDown","handleMouseUp","handleKeyDown","resize","u_darken_top","jsDarkenTop","u_active_colors","activeColors","u_global","noiseFreq","freqX","freqY","noiseSpeed","u_vertDeform","incline","sin","angle","cos","offsetTop","offsetBottom","noiseAmp","amp","noiseFlow","noiseSeed","seed","u_baseColor","sectionColors","u_waveLayers","color","noiseFloor","noiseCeil","initMaterial","hidden","parseInt","minWidth","body","remove","initGradientColors","initMesh","getPropertyValue","init","addIsLoadedClass","cssVarRetries","maxCssVarRetries","cssPropertyName","hex","trim","hexTemp","substr","split","Boolean","Experience","initGradient","JOBS","genJob","job","jobId","company","containerId","terms","blurbs","intercom","stripe","twitter","mastercard","JobDescriptions","Header","state","jobIndex","props","start","event","keyCode","setState","componentDidMount","componentWillUnmount","defaultProps","floor","random","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","LineController","Title","Tooltip","Legend","Learning","inView","showGraphWhenScrollIntoView","bind","isGraphScrolledIntoView","renderGraph","role","data","datasets","createDataset","firstRawData","generateExpCurve","options","canvasId","rect","bottom","innerHeight","documentElement","clientHeight","clientWidth","slope","arr","x","y","exp","Set","label","borderColor","chart","ctx","chartArea","gradient","createLinearGradient","addColorStop","buildGradient","cubicInterpolationMode","pointRadius","tension","animation","xComplete","yComplete","delayBetweenPoints","axisAnimation","onComplete","duration","easing","xAnimation","NaN","yAnimation","scales","getPixelForValue","getDatasetMeta","datasetIndex","getProps","delay","xStarted","mode","yStarted","buildAnimation","interaction","intersect","layout","padding","maintainAspectRatio","plugins","legend","tooltip","enabled","external","tooltipElement","tooltipId","createElement","appendChild","tooltipModel","opacity","rightAlign","caretX","bodyLines","bodyItem","lines","innerHtml","parseFloat","stars","j","pageYOffset","caretY","pointerEvents","pageXOffset","responsive","ticks","title","text","grid","drawTicks","Map","removeScrollListener","scrollY","expand","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","lat","lng","Location","Floaty","numLayers","keys","_","idx","Tabs","selected","select","React","Children","children","child","cloneElement","renderTabs","renderContent","Tab","onClick","preventDefault","Skills","SKILLS","genSkillEraTab","era","skills","genSkillRow","skill","safeTitle","logoImgId","starsId","genStars","numFilledStars","firstThree","genStar","lastTwo","filled","JS","js","RUBY","ruby","SCALA","scala","GOLANG","golang","PYTHON","python","JAVA","java","App","ReactDOM"],"mappings":"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","file":"static/js/main.0029ab0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n/**\n * Education renders my contact details.\n */\nclass Contact extends Component {\n  render() {\n    return (\n      <div className=\"Section\" id=\"contact\">\n        <div className=\"contact-container\">\n          <div className=\"contact-container-text\">\n            <p>\n              I like it, online, and I’ve worked with remote teams most of my career.\n            </p>\n            <p>\n              But I have a fairly minimal online presence.\n            </p>\n            <p>\n              I’d like to think I’m moving towards quality, not quantity.\n            </p>\n            <p>\n              It’s a process.\n            </p>\n          </div>\n          <div className=\"contact-container-icons\">\n            { CONTACTS.map(genContact) }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst genContact = (contact) => {\n  return (\n    <a href={contact.link} key={contact.service} target={contact.sameWindow ? \"_self\" : \"_blank\"} rel=\"noreferrer\">\n      <img alt={`${contact.service} Logo`} src={contact.logo} />\n    </a>\n  );\n};\n\nconst CONTACTS = [\n  {\n    link: \"mailto: steve.whitney.cv@gmail.com\",\n    logo: \"img/gmail.svg\",\n    sameWindow: \"true\",\n    service: \"Gmail\",\n  },\n  {\n    link: \"https://join.skype.com/eyeCmLRyJisN\",\n    logo: \"img/skype.svg\",\n    service: \"Skype\",\n  },\n  {\n    link: \"https://www.linkedin.com/in/whitneysteve/\",\n    logo: \"img/linkedin.svg\",\n    service: \"LinkedIn\",\n  },\n  {\n    link: \"http://github.com/whitneysteve\",\n    logo: \"img/github.svg\",\n    service: \"Github\",\n  },\n  {\n    link: \"https://twitter.com/whitneysteve\",\n    logo: \"img/twitter.svg\",\n    service: \"Twitter\",\n  },\n];\n\nexport default Contact;\n","import { Component } from 'react';\n\n/**\n * Renders supported devgrid measurements on load and when the window resizes.\n */\nclass Devgrid extends Component {\n  componentDidMount() {\n    window.addEventListener('load', drawMeasurements);\n    window.addEventListener('resize', drawMeasurements);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', drawMeasurements);\n    window.removeEventListener('resize', drawMeasurements);\n  }\n\n  render() {\n    return '';\n  }\n}\n\n/**\n * Function renders all the different measurements supported by devgrid.\n */\nexport function drawMeasurements() {\n  updateX();\n  updateY();\n  updateBottomLeftCornerDownMargins();\n  updateTopLeftCornerLeftMargins();\n  updateCenterUpMargins();\n  updateBetweens();\n}\n\n/**\n * Update the measurement values along any horizontal borders.\n */\nfunction updateX() {\n  ['top', 'bottom'].forEach(position => {\n    const elements = document.getElementsByClassName(`dev-grid-measurement-${position}`);\n    for (let element of elements) {\n      element.innerHTML = `${element.parentElement?.offsetWidth || '??'}px`;\n    }\n  });\n}\n\n/**\n * Update the measurement values along any vertical borders.\n */\nfunction updateY() {\n  ['right', 'left'].forEach(position => {\n    const elements = document.getElementsByClassName(`dev-grid-measurement-${position}`);\n    for(let element of elements) {\n      element.innerHTML = `${element.parentElement?.offsetHeight || '??'}px`;\n    }\n  });\n}\n\n/**\n * Update the measurement values of margins between elements from the top-left of the element, going left.\n */\nfunction updateTopLeftCornerLeftMargins() {\n  const elements = document.getElementsByClassName('dev-grid-margin-top-left-corner-left');\n  for (let element of elements) {\n    const { parentRect, targetRect } = getElementRectangles(element);\n\n    const firstY = targetRect.left;\n    const secondY = parentRect.left;\n    const distance = Math.abs(Math.round(firstY - secondY));\n\n    updateElement(\n      element,\n      targetRect.top - parentRect.top,\n      distance / 4,\n      distance,\n    );\n  }\n}\n\n/**\n * Update the measurement values of margins between elements from the bottom-left of the element, going downwards.\n */\nfunction updateBottomLeftCornerDownMargins() {\n  const elements = document.getElementsByClassName('dev-grid-margin-bottom-left-corner-down');\n  for (let element of elements) {\n    const { parentRect, targetRect } = getElementRectangles(element);\n\n    const firstY = targetRect.top + targetRect.height;\n    const secondY = parentRect.top + parentRect.height;\n    const distance = Math.abs(Math.round(firstY - secondY));\n    const leftCorner = (parentRect.top + parentRect.height) - (targetRect.top);\n\n    updateElement(\n      element,\n      leftCorner + (distance / 2) - 5,\n      targetRect.left - parentRect.left,\n      distance,\n    );\n  }\n}\n\n/**\n * Update the measurement values of margins between elements from the centre of the top border of the element, going\n * upwards.\n */\nfunction updateCenterUpMargins() {\n  const elements = document.getElementsByClassName('dev-grid-margin-center-up');\n  for (let element of elements) {\n    console.log(element);\n    const { parentRect, targetRect } = getElementRectangles(element);\n\n    const firstY = targetRect.top;\n    const secondY = parentRect.top;\n    const distance = Math.abs(Math.round(firstY - secondY));\n\n    updateElement(\n      element,\n      distance / 2,\n      targetRect.left + (targetRect.width / 2) - 20 - parentRect.left,\n      distance,\n    );\n  }\n}\n\n/**\n * Update the measurement values of distances between elements.\n */\nfunction updateBetweens() {\n  const elements = document.getElementsByClassName('dev-grid-margin-between');\n  for (let element of elements) {\n    const target1 = document.getElementById(element.dataset.targetOne);\n    const target1Parent = target1.parentElement;\n    const target2 = document.getElementById(element.dataset.targetTwo);\n\n    const target1Rect = target1.getBoundingClientRect();\n    const target1ParentRect = target1Parent.getBoundingClientRect();\n    const target2Rect = target2.getBoundingClientRect();\n\n    const firstX = target1Rect.right;\n    const secondX = target2Rect.left;\n    const distance = Math.abs(Math.round(firstX - secondX));\n\n    updateElement(\n      element,\n      (target1Rect.top - target1ParentRect.top) + (distance / 2),\n      target1Rect.width - (distance / 4),\n      distance,\n    );\n  }\n}\n\n/**\n * Update the measurement element with position and value.\n *\n * @param {DOMElement} element the measurement element to update.\n * @param {Number} top the top value for the measurement element.\n * @param {Number} left the left value of the measurement element.\n * @param {Number} distance the distance di display on the margin.\n */\nfunction updateElement(element, top, left, distance) {\n  element.innerHTML = `${distance}px`;\n  element.style.top = `${top}px`;\n  element.style.left = `${left}px`;\n  element.style.width = `${distance / 2}px`;\n  element.style.display = distance < 35 ? \"none\" : \"flex\";\n}\n\n/**\n * Utility function to pull the bounding rectangles from elements we are measuring.\n *\n * @param {DOMElement} element the element to extract the source and target bounding rectangles between which we are\n * measuring.\n * @returns the extracted rectangles in an object form keyed by parentRect and targetRect.\n */\nfunction getElementRectangles(element) {\n  const parent = element.parentElement;\n  const target = document.getElementById(element.dataset.target);\n\n  return { parentRect: parent.getBoundingClientRect(), targetRect: target.getBoundingClientRect() };\n}\n\nDevgrid.propTypes = {};\n\nexport default Devgrid;\n","export default __webpack_public_path__ + \"static/media/dcu.b0369de4.svg\";","export default __webpack_public_path__ + \"static/media/ucd.f4b06b81.svg\";","import React, { Component } from 'react';\nimport dcu from '../img/education/dcu.svg';\nimport ucd from '../img/education/ucd.svg';\n\n/**\n * Education renders my college degrees.\n */\nclass Education extends Component {\n  render() {\n    return (\n      <div className=\"Section\" id=\"education\">\n        { renderEducation() }\n      </div>\n    );\n  }\n}\n\nconst renderEducation = () => {\n  return (\n    <div className=\"education-container\">\n      { EDUCATION.map(renderQualication) }\n    </div>\n  );\n};\n\nconst renderQualication = (qualification) => {\n  return (\n    <div className=\"education-container-qualification\" key={ qualification.course }>\n      <div className=\"education-container-qualification-logo\">\n        <img alt={`${qualification.school} Logo`} src={ qualification.logo } />\n      </div>\n      <div className=\"education-container-qualification-school\">\n        { qualification.school }\n      </div>\n      <div className=\"education-container-qualification-course\">\n        { qualification.course }\n      </div>\n      <div className=\"education-container-qualification-result\">\n        { qualification.grade }\n      </div>\n      <div className=\"education-container-qualification-year\">\n        { qualification.year }\n      </div>\n    </div>\n  );\n};\n\nconst EDUCATION = [\n  {\n    course: \"B.Sc, Computer Applications\",\n    grade: \"1st Class Honours\",\n    logo: dcu,\n    school: \"Dublin City University\",\n    year: \"2005\",\n  },\n  {\n    course: \"M.Bs, Information Systems\",\n    grade: \"1st Class Honours\",\n    logo: ucd,\n    school: \"Smurfit Graduate Business School\",\n    year: \"2007\",\n  },\n];\n\nexport default Education;\n","\n/* eslint-disable */\n\n/*\n*   Stripe WebGl Gradient Animation\n*   All Credits to Stripe.com\n*   ScrollObserver functionality to disable animation when not scrolled into view has been disabled and\n*   commented out for now.\n*   https://kevinhufnagl.com\n*/\n\n\n//Converting colors to proper format\nfunction normalizeColor(hexCode) {\n  return [(hexCode >> 16 & 255) / 255, (hexCode >> 8 & 255) / 255, (255 & hexCode) / 255]\n} [\"SCREEN\", \"LINEAR_LIGHT\"].reduce((hexCode, t, n) => Object.assign(hexCode, {\n  [t]: n\n}), {});\n\n//Essential functionality of WebGl\n//t = width\n//n = height\nclass MiniGl {\n  constructor(canvas, width, height, debug = false) {\n      const _miniGl = this,\n          debug_output = -1 !== document.location.search.toLowerCase().indexOf(\"debug=webgl\");\n      _miniGl.canvas = canvas, _miniGl.gl = _miniGl.canvas.getContext(\"webgl\", {\n          antialias: true\n      }), _miniGl.meshes = [];\n      const context = _miniGl.gl;\n      width && height && this.setSize(width, height), _miniGl.lastDebugMsg, _miniGl.debug = debug && debug_output ? function(e) {\n          const t = new Date;\n          t - _miniGl.lastDebugMsg > 1e3 && console.log(\"---\"), console.log(t.toLocaleTimeString() + Array(Math.max(0, 32 - e.length)).join(\" \") + e + \": \", ...Array.from(arguments).slice(1)), _miniGl.lastDebugMsg = t\n      } : () => {}, Object.defineProperties(_miniGl, {\n          Material: {\n              enumerable: false,\n              value: class {\n                  constructor(vertexShaders, fragments, uniforms = {}) {\n                      const material = this;\n                      function getShaderByType(type, source) {\n                          const shader = context.createShader(type);\n                          return context.shaderSource(shader, source), context.compileShader(shader), context.getShaderParameter(shader, context.COMPILE_STATUS) || console.error(context.getShaderInfoLog(shader)), _miniGl.debug(\"Material.compileShaderSource\", {\n                              source: source\n                          }), shader\n                      }\n                      function getUniformVariableDeclarations(uniforms, type) {\n                          return Object.entries(uniforms).map(([uniform, value]) => value.getDeclaration(uniform, type)).join(\"\\n\")\n                      }\n                      material.uniforms = uniforms, material.uniformInstances = [];\n\n                      const prefix = \"\\n              precision highp float;\\n            \";\n                      material.vertexSource = `\\n              ${prefix}\\n              attribute vec4 position;\\n              attribute vec2 uv;\\n              attribute vec2 uvNorm;\\n              ${getUniformVariableDeclarations(_miniGl.commonUniforms,\"vertex\")}\\n              ${getUniformVariableDeclarations(uniforms,\"vertex\")}\\n              ${vertexShaders}\\n            `,\n                      material.Source = `\\n              ${prefix}\\n              ${getUniformVariableDeclarations(_miniGl.commonUniforms,\"fragment\")}\\n              ${getUniformVariableDeclarations(uniforms,\"fragment\")}\\n              ${fragments}\\n            `,\n                      material.vertexShader = getShaderByType(context.VERTEX_SHADER, material.vertexSource),\n                      material.fragmentShader = getShaderByType(context.FRAGMENT_SHADER, material.Source),\n                      material.program = context.createProgram(),\n                      context.attachShader(material.program, material.vertexShader),\n                      context.attachShader(material.program, material.fragmentShader),\n                      context.linkProgram(material.program),\n                      context.getProgramParameter(material.program, context.LINK_STATUS) || console.error(context.getProgramInfoLog(material.program)),\n                      context.useProgram(material.program),\n                      material.attachUniforms(void 0, _miniGl.commonUniforms),\n                      material.attachUniforms(void 0, material.uniforms)\n                  }\n                  //t = uniform\n                  attachUniforms(name, uniforms) {\n                      //n  = material\n                      const material = this;\n                      void 0 === name ? Object.entries(uniforms).forEach(([name, uniform]) => {\n                          material.attachUniforms(name, uniform)\n                      }) : \"array\" == uniforms.type ? uniforms.value.forEach((uniform, i) => material.attachUniforms(`${name}[${i}]`, uniform)) : \"struct\" == uniforms.type ? Object.entries(uniforms.value).forEach(([uniform, i]) => material.attachUniforms(`${name}.${uniform}`, i)) : (_miniGl.debug(\"Material.attachUniforms\", {\n                          name: name,\n                          uniform: uniforms\n                      }), material.uniformInstances.push({\n                          uniform: uniforms,\n                          location: context.getUniformLocation(material.program, name)\n                      }))\n                  }\n              }\n          },\n          Uniform: {\n              enumerable: !1,\n              value: class {\n                  constructor(e) {\n                      this.type = \"float\", Object.assign(this, e);\n                      this.typeFn = {\n                          float: \"1f\",\n                          int: \"1i\",\n                          vec2: \"2fv\",\n                          vec3: \"3fv\",\n                          vec4: \"4fv\",\n                          mat4: \"Matrix4fv\"\n                      } [this.type] || \"1f\", this.update()\n                  }\n                  update(value) {\n                      void 0 !== this.value && context[`uniform${this.typeFn}`](value, 0 === this.typeFn.indexOf(\"Matrix\") ? this.transpose : this.value, 0 === this.typeFn.indexOf(\"Matrix\") ? this.value : null)\n                  }\n                  //e - name\n                  //t - type\n                  //n - length\n                  getDeclaration(name, type, length) {\n                      const uniform = this;\n                      if (uniform.excludeFrom !== type) {\n                          if (\"array\" === uniform.type) return uniform.value[0].getDeclaration(name, type, uniform.value.length) + `\\nconst int ${name}_length = ${uniform.value.length};`;\n                          if (\"struct\" === uniform.type) {\n                              let name_no_prefix = name.replace(\"u_\", \"\");\n                              return name_no_prefix =\n                                name_no_prefix.charAt(0).toUpperCase() +\n                                name_no_prefix.slice(1),\n                                `uniform struct ${name_no_prefix}\n                                {\\n` +\n                                Object.entries(uniform.value).map(([name, uniform]) =>\n                                uniform.getDeclaration(name, type)\n                                .replace(/^uniform/, \"\"))\n                                .join(\"\")\n                                + `\\n} ${name}${length>0?`[${length}]`:\"\"};`\n                          }\n                          return `uniform ${uniform.type} ${name}${length>0?`[${length}]`:\"\"};`\n                      }\n                  }\n              }\n          },\n          PlaneGeometry: {\n              enumerable: !1,\n              value: class {\n                  constructor(width, height, n, i, orientation) {\n                    context.createBuffer(), this.attributes = {\n                          position: new _miniGl.Attribute({\n                              target: context.ARRAY_BUFFER,\n                              size: 3\n                          }),\n                          uv: new _miniGl.Attribute({\n                              target: context.ARRAY_BUFFER,\n                              size: 2\n                          }),\n                          uvNorm: new _miniGl.Attribute({\n                              target: context.ARRAY_BUFFER,\n                              size: 2\n                          }),\n                          index: new _miniGl.Attribute({\n                              target: context.ELEMENT_ARRAY_BUFFER,\n                              size: 3,\n                              type: context.UNSIGNED_SHORT\n                          })\n                      }, this.setTopology(n, i), this.setSize(width, height, orientation)\n                  }\n                  setTopology(e = 1, t = 1) {\n                      const n = this;\n                      n.xSegCount = e, n.ySegCount = t, n.vertexCount = (n.xSegCount + 1) * (n.ySegCount + 1), n.quadCount = n.xSegCount * n.ySegCount * 2, n.attributes.uv.values = new Float32Array(2 * n.vertexCount), n.attributes.uvNorm.values = new Float32Array(2 * n.vertexCount), n.attributes.index.values = new Uint16Array(3 * n.quadCount);\n                      for (let e = 0; e <= n.ySegCount; e++)\n                          for (let t = 0; t <= n.xSegCount; t++) {\n                              const i = e * (n.xSegCount + 1) + t;\n                              if (n.attributes.uv.values[2 * i] = t / n.xSegCount, n.attributes.uv.values[2 * i + 1] = 1 - e / n.ySegCount, n.attributes.uvNorm.values[2 * i] = t / n.xSegCount * 2 - 1, n.attributes.uvNorm.values[2 * i + 1] = 1 - e / n.ySegCount * 2, t < n.xSegCount && e < n.ySegCount) {\n                                  const s = e * n.xSegCount + t;\n                                  n.attributes.index.values[6 * s] = i, n.attributes.index.values[6 * s + 1] = i + 1 + n.xSegCount, n.attributes.index.values[6 * s + 2] = i + 1, n.attributes.index.values[6 * s + 3] = i + 1, n.attributes.index.values[6 * s + 4] = i + 1 + n.xSegCount, n.attributes.index.values[6 * s + 5] = i + 2 + n.xSegCount\n                              }\n                          }\n                      n.attributes.uv.update(), n.attributes.uvNorm.update(), n.attributes.index.update(), _miniGl.debug(\"Geometry.setTopology\", {\n                          uv: n.attributes.uv,\n                          uvNorm: n.attributes.uvNorm,\n                          index: n.attributes.index\n                      })\n                  }\n                  setSize(width = 1, height = 1, orientation = \"xz\") {\n                      const geometry = this;\n                      geometry.width = width,\n                      geometry.height = height,\n                      geometry.orientation = orientation,\n                      geometry.attributes.position.values && geometry.attributes.position.values.length === 3 * geometry.vertexCount\n                      || (geometry.attributes.position.values = new Float32Array(3 * geometry.vertexCount));\n                      const o = width / -2,\n                          r = height / -2,\n                          segment_width = width / geometry.xSegCount,\n                          segment_height = height / geometry.ySegCount;\n                      for (let yIndex= 0; yIndex <= geometry.ySegCount; yIndex++) {\n                          const t = r + yIndex * segment_height;\n                          for (let xIndex = 0; xIndex <= geometry.xSegCount; xIndex++) {\n                              const r = o + xIndex * segment_width,\n                                  l = yIndex * (geometry.xSegCount + 1) + xIndex;\n                              geometry.attributes.position.values[3 * l + \"xyz\".indexOf(orientation[0])] = r,\n                              geometry.attributes.position.values[3 * l + \"xyz\".indexOf(orientation[1])] = -t\n                          }\n                      }\n                      geometry.attributes.position.update(), _miniGl.debug(\"Geometry.setSize\", {\n                          position: geometry.attributes.position\n                      })\n                  }\n              }\n          },\n          Mesh: {\n              enumerable: !1,\n              value: class {\n                  constructor(geometry, material) {\n                      const mesh = this;\n                      mesh.geometry = geometry, mesh.material = material, mesh.wireframe = !1, mesh.attributeInstances = [], Object.entries(mesh.geometry.attributes).forEach(([e, attribute]) => {\n                          mesh.attributeInstances.push({\n                              attribute: attribute,\n                              location: attribute.attach(e, mesh.material.program)\n                          })\n                      }), _miniGl.meshes.push(mesh), _miniGl.debug(\"Mesh.constructor\", {\n                          mesh: mesh\n                      })\n                  }\n                  draw() {\n                    context.useProgram(this.material.program), this.material.uniformInstances.forEach(({\n                          uniform: e,\n                          location: t\n                      }) => e.update(t)), this.attributeInstances.forEach(({\n                          attribute: e,\n                          location: t\n                      }) => e.use(t)), context.drawElements(this.wireframe ? context.LINES : context.TRIANGLES, this.geometry.attributes.index.values.length, context.UNSIGNED_SHORT, 0)\n                  }\n                  remove() {\n                      _miniGl.meshes = _miniGl.meshes.filter(e => e != this)\n                  }\n              }\n          },\n          Attribute: {\n              enumerable: !1,\n              value: class {\n                  constructor(e) {\n                      this.type = context.FLOAT, this.normalized = !1, this.buffer = context.createBuffer(), Object.assign(this, e), this.update()\n                  }\n                  update() {\n                      void 0 !== this.values && (context.bindBuffer(this.target, this.buffer), context.bufferData(this.target, this.values, context.STATIC_DRAW))\n                  }\n                  attach(e, t) {\n                      const n = context.getAttribLocation(t, e);\n                      return this.target === context.ARRAY_BUFFER && (context.enableVertexAttribArray(n), context.vertexAttribPointer(n, this.size, this.type, this.normalized, 0, 0)), n\n                  }\n                  use(e) {\n                    context.bindBuffer(this.target, this.buffer), this.target === context.ARRAY_BUFFER && (context.enableVertexAttribArray(e), context.vertexAttribPointer(e, this.size, this.type, this.normalized, 0, 0))\n                  }\n              }\n          }\n      });\n      const a = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      _miniGl.commonUniforms = {\n          projectionMatrix: new _miniGl.Uniform({\n              type: \"mat4\",\n              value: a\n          }),\n          modelViewMatrix: new _miniGl.Uniform({\n              type: \"mat4\",\n              value: a\n          }),\n          resolution: new _miniGl.Uniform({\n              type: \"vec2\",\n              value: [1, 1]\n          }),\n          aspectRatio: new _miniGl.Uniform({\n              type: \"float\",\n              value: 1\n          })\n      }\n  }\n  setSize(e = 640, t = 480) {\n      this.width = e, this.height = t, this.canvas.width = e, this.canvas.height = t, this.gl.viewport(0, 0, e, t), this.commonUniforms.resolution.value = [e, t], this.commonUniforms.aspectRatio.value = e / t, this.debug(\"MiniGL.setSize\", {\n          width: e,\n          height: t\n      })\n  }\n  //left, right, top, bottom, near, far\n  setOrthographicCamera(e = 0, t = 0, n = 0, i = -2e3, s = 2e3) {\n      this.commonUniforms.projectionMatrix.value = [2 / this.width, 0, 0, 0, 0, 2 / this.height, 0, 0, 0, 0, 2 / (i - s), 0, e, t, n, 1], this.debug(\"setOrthographicCamera\", this.commonUniforms.projectionMatrix.value)\n  }\n  render() {\n      this.gl.clearColor(0, 0, 0, 0), this.gl.clearDepth(1), this.meshes.forEach(e => e.draw())\n  }\n}\n\n\n\n//Sets initial properties\nfunction e(object, propertyName, val) {\n  return propertyName in object ? Object.defineProperty(object, propertyName, {\n      value: val,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n  }) : object[propertyName] = val, object\n}\n\n//Gradient object\nclass Gradient {\n  constructor(...t) {\n      e(this, \"el\", void 0), e(this, \"cssVarRetries\", 0), e(this, \"maxCssVarRetries\", 200), e(this, \"angle\", 0), e(this, \"isLoadedClass\", !1), e(this, \"isScrolling\", !1), /*e(this, \"isStatic\", o.disableAmbientAnimations()),*/ e(this, \"scrollingTimeout\", void 0), e(this, \"scrollingRefreshDelay\", 200), e(this, \"isIntersecting\", !1), e(this, \"shaderFiles\", void 0), e(this, \"vertexShader\", void 0), e(this, \"sectionColors\", void 0), e(this, \"computedCanvasStyle\", void 0), e(this, \"conf\", void 0), e(this, \"uniforms\", void 0), e(this, \"t\", 1253106), e(this, \"last\", 0), e(this, \"width\", void 0), e(this, \"minWidth\", 1111), e(this, \"height\", 600), e(this, \"xSegCount\", void 0), e(this, \"ySegCount\", void 0), e(this, \"mesh\", void 0), e(this, \"material\", void 0), e(this, \"geometry\", void 0), e(this, \"minigl\", void 0), e(this, \"scrollObserver\", void 0), e(this, \"amp\", 320), e(this, \"seed\", 5), e(this, \"freqX\", 14e-5), e(this, \"freqY\", 29e-5), e(this, \"freqDelta\", 1e-5), e(this, \"activeColors\", [1, 1, 1, 1]), e(this, \"isMetaKey\", !1), e(this, \"isGradientLegendVisible\", !1), e(this, \"isMouseDown\", !1), e(this, \"handleScroll\", () => {\n          clearTimeout(this.scrollingTimeout), this.scrollingTimeout = setTimeout(this.handleScrollEnd, this.scrollingRefreshDelay), this.isGradientLegendVisible && this.hideGradientLegend(), this.conf.playing && (this.isScrolling = !0, this.pause())\n      }), e(this, \"handleScrollEnd\", () => {\n          this.isScrolling = !1, this.isIntersecting && this.play()\n      }), e(this, \"resize\", () => {\n          this.width = window.innerWidth, this.minigl.setSize(this.width, this.height), this.minigl.setOrthographicCamera(), this.xSegCount = Math.ceil(this.width * this.conf.density[0]), this.ySegCount = Math.ceil(this.height * this.conf.density[1]), this.mesh.geometry.setTopology(this.xSegCount, this.ySegCount), this.mesh.geometry.setSize(this.width, this.height), this.mesh.material.uniforms.u_shadow_power.value = this.width < 600 ? 5 : 6\n      }), e(this, \"handleMouseDown\", e => {\n          this.isGradientLegendVisible && (this.isMetaKey = e.metaKey, this.isMouseDown = !0, !1 === this.conf.playing && requestAnimationFrame(this.animate))\n      }), e(this, \"handleMouseUp\", () => {\n          this.isMouseDown = !1\n      }), e(this, \"animate\", e => {\n          if (!this.shouldSkipFrame(e) || this.isMouseDown) {\n              if (this.t += Math.min(e - this.last, 1e3 / 15), this.last = e, this.isMouseDown) {\n                  let e = 160;\n                  this.isMetaKey && (e = -160), this.t += e\n              }\n              this.mesh.material.uniforms.u_time.value = this.t, this.minigl.render()\n\n          }\n          if (0 !== this.last && this.isStatic) return this.minigl.render(), void this.disconnect();\n          (/*this.isIntersecting && */this.conf.playing || this.isMouseDown) && requestAnimationFrame(this.animate)\n      }), e(this, \"addIsLoadedClass\", () => {\n          /*this.isIntersecting && */!this.isLoadedClass && (this.isLoadedClass = !0, this.el.classList.add(\"isLoaded\"), setTimeout(() => {\n              this.el.parentElement.classList.add(\"isLoaded\")\n          }, 3e3))\n      }), e(this, \"pause\", () => {\n          this.conf.playing = false\n      }), e(this, \"play\", () => {\n          requestAnimationFrame(this.animate), this.conf.playing = true\n      }), e(this,\"initGradient\", (selector) => {\n        this.el = document.querySelector(selector);\n        this.connect();\n        return this;\n      })\n  }\n  async connect() {\n      this.shaderFiles = {\n          vertex: \"varying vec3 v_color;\\n\\nvoid main() {\\n  float time = u_time * u_global.noiseSpeed;\\n\\n  vec2 noiseCoord = resolution * uvNorm * u_global.noiseFreq;\\n\\n  vec2 st = 1. - uvNorm.xy;\\n\\n  //\\n  // Tilting the plane\\n  //\\n\\n  // Front-to-back tilt\\n  float tilt = resolution.y / 2.0 * uvNorm.y;\\n\\n  // Left-to-right angle\\n  float incline = resolution.x * uvNorm.x / 2.0 * u_vertDeform.incline;\\n\\n  // Up-down shift to offset incline\\n  float offset = resolution.x / 2.0 * u_vertDeform.incline * mix(u_vertDeform.offsetBottom, u_vertDeform.offsetTop, uv.y);\\n\\n  //\\n  // Vertex noise\\n  //\\n\\n  float noise = snoise(vec3(\\n    noiseCoord.x * u_vertDeform.noiseFreq.x + time * u_vertDeform.noiseFlow,\\n    noiseCoord.y * u_vertDeform.noiseFreq.y,\\n    time * u_vertDeform.noiseSpeed + u_vertDeform.noiseSeed\\n  )) * u_vertDeform.noiseAmp;\\n\\n  // Fade noise to zero at edges\\n  noise *= 1.0 - pow(abs(uvNorm.y), 2.0);\\n\\n  // Clamp to 0\\n  noise = max(0.0, noise);\\n\\n  vec3 pos = vec3(\\n    position.x,\\n    position.y + tilt + incline + noise - offset,\\n    position.z\\n  );\\n\\n  //\\n  // Vertex color, to be passed to fragment shader\\n  //\\n\\n  if (u_active_colors[0] == 1.) {\\n    v_color = u_baseColor;\\n  }\\n\\n  for (int i = 0; i < u_waveLayers_length; i++) {\\n    if (u_active_colors[i + 1] == 1.) {\\n      WaveLayers layer = u_waveLayers[i];\\n\\n      float noise = smoothstep(\\n        layer.noiseFloor,\\n        layer.noiseCeil,\\n        snoise(vec3(\\n          noiseCoord.x * layer.noiseFreq.x + time * layer.noiseFlow,\\n          noiseCoord.y * layer.noiseFreq.y,\\n          time * layer.noiseSpeed + layer.noiseSeed\\n        )) / 2.0 + 0.5\\n      );\\n\\n      v_color = blendNormal(v_color, layer.color, pow(noise, 4.));\\n    }\\n  }\\n\\n  //\\n  // Finish\\n  //\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n}\",\n          noise: \"//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n    return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n{\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n            i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n          + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n          + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n}\",\n          blend: \"//\\n// https://github.com/jamieowen/glsl-blend\\n//\\n\\n// Normal\\n\\nvec3 blendNormal(vec3 base, vec3 blend) {\\n\\treturn blend;\\n}\\n\\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Screen\\n\\nfloat blendScreen(float base, float blend) {\\n\\treturn 1.0-((1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend) {\\n\\treturn vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Multiply\\n\\nvec3 blendMultiply(vec3 base, vec3 blend) {\\n\\treturn base*blend;\\n}\\n\\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Overlay\\n\\nfloat blendOverlay(float base, float blend) {\\n\\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend) {\\n\\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Hard light\\n\\nvec3 blendHardLight(vec3 base, vec3 blend) {\\n\\treturn blendOverlay(blend,base);\\n}\\n\\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Soft light\\n\\nfloat blendSoftLight(float base, float blend) {\\n\\treturn (blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color dodge\\n\\nfloat blendColorDodge(float base, float blend) {\\n\\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color burn\\n\\nfloat blendColorBurn(float base, float blend) {\\n\\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Vivid Light\\n\\nfloat blendVividLight(float base, float blend) {\\n\\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Lighten\\n\\nfloat blendLighten(float base, float blend) {\\n\\treturn max(blend,base);\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLighten(base.r,blend.r),blendLighten(base.g,blend.g),blendLighten(base.b,blend.b));\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear burn\\n\\nfloat blendLinearBurn(float base, float blend) {\\n\\t// Note : Same implementation as BlendSubtractf\\n\\treturn max(base+blend-1.0,0.0);\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendSubtract\\n\\treturn max(base+blend-vec3(1.0),vec3(0.0));\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear dodge\\n\\nfloat blendLinearDodge(float base, float blend) {\\n\\t// Note : Same implementation as BlendAddf\\n\\treturn min(base+blend,1.0);\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendAdd\\n\\treturn min(base+blend,vec3(1.0));\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear light\\n\\nfloat blendLinearLight(float base, float blend) {\\n\\treturn blend<0.5?blendLinearBurn(base,(2.0*blend)):blendLinearDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLinearLight(base.r,blend.r),blendLinearLight(base.g,blend.g),blendLinearLight(base.b,blend.b));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\",\n          fragment: \"varying vec3 v_color;\\n\\nvoid main() {\\n  vec3 color = v_color;\\n  if (u_darken_top == 1.0) {\\n    vec2 st = gl_FragCoord.xy/resolution.xy;\\n    color.g -= pow(st.y + sin(-12.0) * st.x, u_shadow_power) * 0.4;\\n  }\\n  gl_FragColor = vec4(color, 1.0);\\n}\"\n      },\n      this.conf = {\n          presetName: \"\",\n          wireframe: false,\n          density: [.06, .16],\n          zoom: 1,\n          rotation: 0,\n          playing: true\n      },\n      document.querySelectorAll(\"canvas\").length < 1 ? console.log(\"DID NOT LOAD HERO STRIPE CANVAS\") : (\n\n        this.minigl = new MiniGl(this.el, null, null, !0),\n        requestAnimationFrame(() => {\n            this.el && (this.computedCanvasStyle = getComputedStyle(this.el), this.waitForCssVars())\n        })\n        /*\n        this.scrollObserver = await s.create(.1, !1),\n        this.scrollObserver.observe(this.el),\n        this.scrollObserver.onSeparate(() => {\n            window.removeEventListener(\"scroll\", this.handleScroll), window.removeEventListener(\"mousedown\", this.handleMouseDown), window.removeEventListener(\"mouseup\", this.handleMouseUp), window.removeEventListener(\"keydown\", this.handleKeyDown), this.isIntersecting = !1, this.conf.playing && this.pause()\n        }),\n        this.scrollObserver.onIntersect(() => {\n            window.addEventListener(\"scroll\", this.handleScroll), window.addEventListener(\"mousedown\", this.handleMouseDown), window.addEventListener(\"mouseup\", this.handleMouseUp), window.addEventListener(\"keydown\", this.handleKeyDown), this.isIntersecting = !0, this.addIsLoadedClass(), this.play()\n        })*/\n\n      )\n  }\n  disconnect() {\n      this.scrollObserver && (window.removeEventListener(\"scroll\", this.handleScroll), window.removeEventListener(\"mousedown\", this.handleMouseDown), window.removeEventListener(\"mouseup\", this.handleMouseUp), window.removeEventListener(\"keydown\", this.handleKeyDown), this.scrollObserver.disconnect()), window.removeEventListener(\"resize\", this.resize)\n  }\n  initMaterial() {\n      this.uniforms = {\n          u_time: new this.minigl.Uniform({\n              value: 0\n          }),\n          u_shadow_power: new this.minigl.Uniform({\n              value: 5\n          }),\n          u_darken_top: new this.minigl.Uniform({\n              value: \"\" === this.el.dataset.jsDarkenTop ? 1 : 0\n          }),\n          u_active_colors: new this.minigl.Uniform({\n              value: this.activeColors,\n              type: \"vec4\"\n          }),\n          u_global: new this.minigl.Uniform({\n              value: {\n                  noiseFreq: new this.minigl.Uniform({\n                      value: [this.freqX, this.freqY],\n                      type: \"vec2\"\n                  }),\n                  noiseSpeed: new this.minigl.Uniform({\n                      value: 5e-6\n                  })\n              },\n              type: \"struct\"\n          }),\n          u_vertDeform: new this.minigl.Uniform({\n              value: {\n                  incline: new this.minigl.Uniform({\n                      value: Math.sin(this.angle) / Math.cos(this.angle)\n                  }),\n                  offsetTop: new this.minigl.Uniform({\n                      value: -.5\n                  }),\n                  offsetBottom: new this.minigl.Uniform({\n                      value: -.5\n                  }),\n                  noiseFreq: new this.minigl.Uniform({\n                      value: [3, 4],\n                      type: \"vec2\"\n                  }),\n                  noiseAmp: new this.minigl.Uniform({\n                      value: this.amp\n                  }),\n                  noiseSpeed: new this.minigl.Uniform({\n                      value: 10\n                  }),\n                  noiseFlow: new this.minigl.Uniform({\n                      value: 3\n                  }),\n                  noiseSeed: new this.minigl.Uniform({\n                      value: this.seed\n                  })\n              },\n              type: \"struct\",\n              excludeFrom: \"fragment\"\n          }),\n          u_baseColor: new this.minigl.Uniform({\n              value: this.sectionColors[0],\n              type: \"vec3\",\n              excludeFrom: \"fragment\"\n          }),\n          u_waveLayers: new this.minigl.Uniform({\n              value: [],\n              excludeFrom: \"fragment\",\n              type: \"array\"\n          })\n      };\n      for (let e = 1; e < this.sectionColors.length; e += 1) this.uniforms.u_waveLayers.value.push(new this.minigl.Uniform({\n          value: {\n              color: new this.minigl.Uniform({\n                  value: this.sectionColors[e],\n                  type: \"vec3\"\n              }),\n              noiseFreq: new this.minigl.Uniform({\n                  value: [2 + e / this.sectionColors.length, 3 + e / this.sectionColors.length],\n                  type: \"vec2\"\n              }),\n              noiseSpeed: new this.minigl.Uniform({\n                  value: 11 + .3 * e\n              }),\n              noiseFlow: new this.minigl.Uniform({\n                  value: 6.5 + .3 * e\n              }),\n              noiseSeed: new this.minigl.Uniform({\n                  value: this.seed + 10 * e\n              }),\n              noiseFloor: new this.minigl.Uniform({\n                  value: .1\n              }),\n              noiseCeil: new this.minigl.Uniform({\n                  value: .63 + .07 * e\n              })\n          },\n          type: \"struct\"\n      }));\n      return this.vertexShader = [this.shaderFiles.noise, this.shaderFiles.blend, this.shaderFiles.vertex].join(\"\\n\\n\"), new this.minigl.Material(this.vertexShader, this.shaderFiles.fragment, this.uniforms)\n  }\n  initMesh() {\n      this.material = this.initMaterial(), this.geometry = new this.minigl.PlaneGeometry, this.mesh = new this.minigl.Mesh(this.geometry, this.material)\n  }\n  shouldSkipFrame(e) {\n      return !!window.document.hidden || (!this.conf.playing || (parseInt(e, 10) % 2 == 0 || void 0))\n  }\n  updateFrequency(e) {\n      this.freqX += e, this.freqY += e\n  }\n  toggleColor(index) {\n      this.activeColors[index] = 0 === this.activeColors[index] ? 1 : 0\n  }\n  showGradientLegend() {\n      this.width > this.minWidth && (this.isGradientLegendVisible = !0, document.body.classList.add(\"isGradientLegendVisible\"))\n  }\n  hideGradientLegend() {\n      this.isGradientLegendVisible = !1, document.body.classList.remove(\"isGradientLegendVisible\")\n  }\n  init() {\n      this.initGradientColors(), this.initMesh(), this.resize(), requestAnimationFrame(this.animate), window.addEventListener(\"resize\", this.resize)\n  }\n  /*\n  * Waiting for the css variables to become available, usually on page load before we can continue.\n  * Using default colors assigned below if no variables have been found after maxCssVarRetries\n  */\n  waitForCssVars() {\n      if (this.computedCanvasStyle && -1 !== this.computedCanvasStyle.getPropertyValue(\"--gradient-color-1\").indexOf(\"#\")) this.init(), this.addIsLoadedClass();\n      else {\n          if (this.cssVarRetries += 1, this.cssVarRetries > this.maxCssVarRetries) {\n              return this.sectionColors = [16711680, 16711680, 16711935, 65280, 255],void this.init();\n          }\n          requestAnimationFrame(() => this.waitForCssVars())\n      }\n  }\n  /*\n  * Initializes the four section colors by retrieving them from css variables.\n  */\n  initGradientColors() {\n      this.sectionColors = [\"--gradient-color-1\", \"--gradient-color-2\", \"--gradient-color-3\", \"--gradient-color-4\"].map(cssPropertyName => {\n          let hex = this.computedCanvasStyle.getPropertyValue(cssPropertyName).trim();\n          //Check if shorthand hex value was used and double the length so the conversion in normalizeColor will work.\n          if (4 === hex.length) {\n              const hexTemp = hex.substr(1).split(\"\").map(hexTemp => hexTemp + hexTemp).join(\"\");\n              hex = `#${hexTemp}`\n          }\n          return hex && `0x${hex.substr(1)}`\n      }).filter(Boolean).map(normalizeColor)\n  }\n}\n\n\n\n\n/*\n*Finally initializing the Gradient class, assigning a canvas to it and calling Gradient.connect() which initializes everything,\n* Use Gradient.pause() and Gradient.play() for controls.\n*\n* Here are some default property values you can change anytime:\n* Amplitude:    Gradient.amp = 0\n* Colors:       Gradient.sectionColors (if you change colors, use normalizeColor(#hexValue)) before you assign it.\n*\n*\n* Useful functions\n* Gradient.toggleColor(index)\n* Gradient.updateFrequency(freq)\n*/\n\nexport { Gradient }\n/* eslint-enable */","export default __webpack_public_path__ + \"static/media/intercom.e2b8de24.svg\";","export default __webpack_public_path__ + \"static/media/stripe.31138be9.svg\";","export default __webpack_public_path__ + \"static/media/twitter.37852d0f.svg\";","export default __webpack_public_path__ + \"static/media/mastercard.b720e3b5.svg\";","import React, { Component } from 'react';\nimport { Gradient } from '../3rdparty/Gradient';\nimport intercom from '../img/companies/intercom.svg';\nimport stripe from '../img/companies/stripe.svg';\nimport twitter from '../img/companies/twitter.svg';\nimport mastercard from '../img/companies/mastercard.svg';\n\n/**\n * Experience renders my previous jobs.\n */\nclass Experience extends Component {\n  componentDidMount() {\n    // Stripe gradient provided by https://whatamesh.vercel.app\n    const gradient = new Gradient();\n    gradient.initGradient('#gradient-canvas-stripe');\n  }\n\n  render() {\n    return (\n      <div className={`Section experience dev-grid`} id=\"experience\">\n        { JOBS.map(genJob) }\n      </div>\n    );\n  }\n}\n\n/**\n * Genreate the markup for a job and attach hover events to update the\n * background.\n *\n * @param {Object} job the job configuration.\n */\nconst genJob = (job) => {\n  const jobId = job.company.toLowerCase();\n  const containerId = `experience-job-${jobId}`;\n\n  return (\n    <div className=\"dev-grid-cell experience-job\" id={ job.id } key={ jobId }>\n      <div className=\"dev-grid-margin-top-left-corner-left\" data-target={containerId}></div>\n      <div className=\"dev-grid-margin-center-up\" data-target={containerId}></div>\n      <div id={containerId} className={`experience-job-company-container ${containerId}`}>\n        <img alt={ `${ job.company } logo` } src={ job.logo } />\n        <canvas id={`gradient-canvas-${jobId}`} data-transition-in />\n      </div>\n    </div>\n  );\n};\n\nconst JOBS = [\n  {\n    id: \"intercom\",\n    company: \"Intercom\",\n    position: \"Software Engineer\",\n    terms: [\n      \"2021 - Present\",\n    ],\n    blurbs: [\n      \"I recently joined Intercom to work on their Growth teams.\",\n    ],\n    logo: intercom,\n  },\n  {\n    id: \"stripe\",\n    company: \"Stripe\",\n    position: \"Software Engineer\",\n    terms: [\n      \"2018 - 2021\",\n    ],\n    blurbs: [\n      \"Working as a full-stack engineer on Stripe's Security Products, building great products to keep our users safe.\",\n      \"At Stripe I've been fortunate enough to work between writing distributed services and message consumers in Ruby and Java and building, great user experiences in React.\",\n    ],\n    logo: stripe,\n  },\n  {\n    id: \"twitter\",\n    company: \"Twitter\",\n    position: \"Software Engineer\",\n    terms: [\n      \"2013 - 2018\",\n    ],\n    blurbs: [\n      \"Twitter is my favourite website and I’m very lucky to have had the opportunity to work and learn here.\",\n      \"Mostly backend engineering on low and high throughput applications, from Ruby to Scala, from monoliths to micro services, and Hadoop.\",\n      \"Built web-apps in React when I could.\",\n    ],\n    logo: twitter,\n  },\n  {\n    id: \"mastercard\",\n    company: \"MasterCard Labs\",\n    position: \"Consultant Software Engineer\",\n    terms: [\n      \"2012 - 2013\",\n    ],\n    blurbs: [\n      \"Researching emerging technologies and trends to create prototypes and other innovations for MasterCard’s next and future generation of products.\",\n      \"Had to pleasure of launching several new, multi-platform services to prototype, pilot, beta and full production.\",\n    ],\n    logo: mastercard,\n  },\n];\n\nexport default Experience;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nconst JobDescriptions = {\n  0: 'Sweet explorer',\n  1: 'Lost',\n  2: 'Looks cool in sunglasses',\n  3: 'Software engineer',\n  4: 'Waiting for the bus',\n  5: 'Software engineer',\n  6: 'Holding the umbrella',\n  7: 'Software engineer',\n};\n\nconst MaxHeaders = 7;\nconst LeftKey = 37;\nconst RightKey = 39;\n\n/**\n * Header renders the top of the site, with my face on it.\n */\nclass Header extends Component {\n  static defaultProps = {\n    start: Math.floor(Math.random() * 8),\n  };\n\n  state = { jobIndex: this.props.start };\n\n  handleKeyDown = (event) => {\n    let jobIndex = this.state.jobIndex;\n    if (event.keyCode === LeftKey) {\n      if (jobIndex === 0) {\n        jobIndex = MaxHeaders;\n      } else {\n        jobIndex--;\n      }\n    } else if (event.keyCode === RightKey) {\n      if (jobIndex >= MaxHeaders) {\n        jobIndex = 0;\n      } else {\n        jobIndex++;\n      }\n    }\n    if (jobIndex !== this.state.jobIndex){\n      this.setState({ jobIndex });\n    }\n  }\n\n  componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    const { jobIndex } = this.state;\n    return (\n      <div className={`Section `} id=\"header\">\n        <div className={`dev-grid header-container header-${jobIndex}`}>\n          <div className=\"header-text-overlay\">\n            <h1>Stephen Whitney</h1>\n            <h2>{JobDescriptions[jobIndex]}</h2>\n          </div>\n          <div className=\"dev-grid-cell\">\n            <div className=\"dev-grid-measurement-right\"></div>\n            <div className=\"dev-grid-measurement-top\"></div>\n            <div className=\"dev-grid-measurement-bottom\"></div>\n          </div>\n          <div className=\"dev-grid-cell\">\n            <div className=\"dev-grid-measurement-right\"></div>\n          </div>\n          <div className=\"dev-grid-cell\">\n            <div className=\"dev-grid-measurement-bottom\"></div>\n            <div className=\"dev-grid-measurement-left\"></div>\n          </div>\n          <div className=\"dev-grid-cell\">\n            <div className=\"dev-grid-measurement-left\"></div>\n            <div className=\"dev-grid-measurement-top\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  start: PropTypes.number,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  LineController,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  LineController,\n  Title,\n  Tooltip,\n  Legend,\n);\n\n/**\n * Learning renders the blurb about how I pick up new skills.\n */\nclass Learning extends Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = {\n      inView: false,\n    };\n\n    this.showGraphWhenScrollIntoView = this.showGraphWhenScrollIntoView.bind(this);\n  }\n\n  componentDidMount() {\n    if (isGraphScrolledIntoView('learning-canvas')) {\n      renderGraph();\n    } else {\n      window.addEventListener('scroll', this.showGraphWhenScrollIntoView);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.showGraphWhenScrollIntoView);\n  }\n\n  showGraphWhenScrollIntoView() {\n    if (this.state.inView) {\n      return;\n    }\n\n    if (isGraphScrolledIntoView('learning-canvas')) {\n      if (this.state.inView) { return; }\n      this.setState({ inView: true });\n      window.removeEventListener('scroll', this.showGraphWhenScrollIntoView);\n      renderGraph();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Section\" id=\"learning\">\n        <div className=\"dev-grid\">\n          <div className=\"dev-grid-cell-three-quarters-height learning-graph-container\">\n            <div className=\"dev-grid-measurement-right\" />\n            <canvas id=\"learning-canvas\" />\n          </div>\n          <div className=\"dev-grid-cell-one-quarter-height learning-text-container\">\n            <div className=\"dev-grid-measurement-bottom\" />\n            <p>\n              I can usually pick things up very quickly.\n            </p>\n            <p>\n              I learn more and faster with focus, frequency and teamwork.\n            </p>\n            <p>\n              I like to help others learn too <i aria-label=\"Heart\" className={\"fas fa-heart\"} role=\"presentation\"></i>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Learning;\n\n/**\n * Render the graph. It's only rendered when it's fully in the viewport as that kicks off the animations.\n */\nfunction renderGraph() {\n  new ChartJS(document.getElementById(\"learning-canvas\").getContext(\"2d\"), {\n    type: 'line',\n    data: {\n      datasets: [\n        createDataset('Working on my own', firstRawData),\n        createDataset('When working with others', generateExpCurve(0.012, 4.2)),\n        createDataset('With frequent use and working with others', generateExpCurve(0.015, 5)),\n      ],\n    },\n    options,\n  });\n}\n\n/**\n * Check if the learning panel is in the viewpane.\n *\n * @param {String} canvasId the ID of the canvas element the graph is rendered in.\n * @returns\n */\nfunction isGraphScrolledIntoView(canvasId) {\n  let rect = document?.getElementById(canvasId)?.getBoundingClientRect();\n\n  return (\n    rect &&\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n}\n\n/**\n * Generate an exponential curve to represent learning progress.\n *\n * @param {Number} slope the slope of the curve to generate data for.\n * @param {Number} position the maximum value of the curve.\n * @return array containing the y-values for the exponential curve.\n */\nfunction generateExpCurve(slope, max) {\n  let arr = [];\n  for (let i = 0; i < 250; i++) {\n    arr.push({ x: i, y: max * (1 - Math.exp(-i * slope)) });\n  }\n  return [...new Set(arr)];\n}\n\n/**\n * Create a dataset to render on the graph. Each dataset represents the progress of learning under certain conditions.\n *\n * @param {String} label a description of the learning conditions.\n * @param {Array} data data representing the learning curve.\n * @returns configured dataset object for rendering in ChartJS.\n */\nfunction createDataset(label, data) {\n  return {\n    borderColor: function (context) {\n      const chart = context.chart;\n      const { ctx, chartArea } = chart;\n      if (!chartArea) {\n        return;\n      }\n      return buildGradient(ctx, chartArea);\n    },\n    cubicInterpolationMode: 'monotone',\n    data,\n    label,\n    pointRadius: 0,\n    tension: 0.4,\n  };\n}\n\n/**\n * The first dataset in the graph. This is used as a template for generating animations and whatnot.\n */\nlet firstRawData = generateExpCurve(0.009, 3.5);\n\n/**\n *\n * @param {Object} ctx the chart context.\n * @param {Rectangle} chartArea the chart area rectanlge.\n * @returns gradient object describing the gradient of the line we're plotting on the graph - a slightly jumbled\n * rainbow gradient.\n */\nfunction buildGradient(ctx, chartArea) {\n  const gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n  gradient.addColorStop(0, 'rgb(255,94,99)');\n  gradient.addColorStop(.55, 'rgb(110,64,170)');\n  gradient.addColorStop(.70, 'rgb(93,173,251)');\n  gradient.addColorStop(.80, 'rgb(26,199,194)');\n  gradient.addColorStop(.95, 'rgb(175,240,91)');\n  gradient.addColorStop(1, 'rgb(6,164,42');\n  return gradient;\n}\n\n/**\n * Build the graph tooltip.\n *\n * @param {Object} context  the chart context.\n */\nfunction buildTooltip(context) {\n  let tooltipElement = document.getElementById('chartjs-tooltip');\n\n  // Create element on first render\n  if (!tooltipElement) {\n    const tooltipId = \"chartjs-tooltip\";\n    tooltipElement = document.createElement('div');\n    tooltipElement.className = tooltipId;\n    tooltipElement.id = tooltipId;\n    tooltipElement.innerHTML = '<div></div>';\n    document.body.appendChild(tooltipElement);\n  }\n\n  // Hide if no tooltip\n  const tooltipModel = context.tooltip;\n  if (tooltipModel.opacity === 0) {\n    tooltipElement.style.opacity = 0;\n    return;\n  }\n\n  const position = context.chart.canvas.getBoundingClientRect();\n  const distanceToRight = position.width - tooltipModel.caretX;\n  const rightAlign = distanceToRight < 250;\n\n  if (rightAlign) {\n    tooltipElement.classList.add('right-pointer');\n  } else {\n    tooltipElement.classList.remove('right-pointer');\n  }\n\n  if (tooltipModel.body) {\n    const bodyLines = tooltipModel.body.map((bodyItem) => bodyItem.lines);\n\n    let innerHtml = \"\";\n\n    bodyLines.forEach(function (body, i) {\n      const elements = body[0].split(\":\");\n      const value = parseFloat(elements[1]);\n\n      innerHtml += `<p>${elements[0]}</p>`;\n      let stars = \"\";\n\n      let j = 0;\n      while (j < value - 0.3) {\n        stars += \"<i class='fas fa-star'></i>\";\n        j += 1;\n      }\n      while (j < 5) {\n        stars += \"<i class='far fa-star'></i>\";\n        j += 1;\n      }\n      innerHtml += `<p>${stars}</p>`;\n    });\n\n    tooltipElement.querySelector('div').innerHTML = innerHtml;\n  }\n\n  tooltipElement.style.opacity = 1;\n  tooltipElement.style.position = 'absolute';\n  tooltipElement.style.top = position.top + window.pageYOffset + tooltipModel.caretY + 'px';\n  tooltipElement.style.padding = tooltipModel.padding + 'px ' + tooltipModel.padding + 'px';\n  tooltipElement.style.pointerEvents = 'none';\n\n  if (rightAlign) {\n    tooltipElement.style.right = position.right - tooltipModel.caretX + 'px';\n    tooltipElement.style.left = 'unset';\n  } else {\n    tooltipElement.style.right = 'unset';\n    tooltipElement.style.left = position.left + window.pageXOffset + tooltipModel.caretX + 'px';\n  }\n}\n\n/**\n * Build the graph animation.\n */\nfunction buildAnimation() {\n  let xComplete;\n  let yComplete;\n\n  const totalDuration = 3000;\n  const delayBetweenPoints = totalDuration / firstRawData.length;\n  const previousY = (ctx) => {\n    if (ctx.index === 0) {\n      return ctx.chart.scales.y.getPixelForValue(100);\n    } else {\n      return ctx.chart.getDatasetMeta(ctx.datasetIndex).data[ctx.index - 1].getProps(['y'], true).y;\n    }\n  };\n\n  const axisAnimation = (from, onComplete) => {\n    return {\n      duration: delayBetweenPoints,\n      easing: 'linear',\n      from,\n      onComplete,\n      type: 'number',\n    };\n  };\n\n  const xAnimation = axisAnimation(NaN, () => { xComplete = true; });\n  const yAnimation = axisAnimation(previousY, () => { yComplete = true; });\n  xAnimation.delay = (ctx) => {\n    if (ctx.type !== 'data' || ctx.xStarted) {\n      return 0;\n    }\n\n    ctx.xStarted = true;\n    let delay = ctx.index * delayBetweenPoints;\n\n    if (ctx.type === 'data' && ctx.mode === 'default' && !xComplete) {\n      delay += ctx.datasetIndex * 1500;\n    }\n\n    return delay;\n  };\n\n  yAnimation.delay = (ctx) => {\n    if (ctx.type !== 'data' || ctx.yStarted) {\n      return 0;\n    }\n\n    ctx.yStarted = true;\n    let delay = ctx.index * delayBetweenPoints;\n\n    if (ctx.type === 'data' && ctx.mode === 'default' && !yComplete) {\n      delay += ctx.datasetIndex * 1500;\n    }\n\n    return delay;\n  };\n\n  return{\n    x: xAnimation,\n    y: yAnimation,\n  };\n}\n\n/**\n * ChartJS configuration options.\n */\nconst options = {\n  animation: buildAnimation(),\n  interaction: {\n    intersect: false,\n  },\n  layout: {\n    padding: 25,\n  },\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: false,\n    },\n    tooltip: {\n      enabled: false,\n      external: buildTooltip,\n    },\n  },\n  responsive: true,\n  scales: {\n    x: {\n      type: 'linear',\n      ticks: {\n        display: false,\n      },\n      title: {\n        display: true,\n        text: \"Time\",\n      },\n    },\n    y: {\n      display: false,\n      grid: {\n        drawTicks: false,\n      },\n    },\n  },\n};\n\n","import GoogleMapReact from \"google-map-react\";\nimport React, { Component } from 'react';\n\nclass Map extends Component {\n  // Dublin\n  static defaultProps = {\n    center: {\n      lat: 53.349,\n      lng: -6.260,\n    },\n    zoom: 5,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  };\n\n  componentWillUnmount() {\n    this.removeScrollListener();\n  };\n\n  removeScrollListener() {\n    window.removeEventListener('scroll', this.handleScroll);\n  };\n\n  handleScroll(event) {\n    if (window.scrollY > 50) {\n      this.setState({ expand: true });\n      this.removeScrollListener();\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"map\" className={this.state && this.state.expand ? \"map map-expanded\" : \"map\"}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyC87jefYvUwpJ45N4Dxo_o7Cg0tjvZtcck\" }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}>\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport Map from './Map';\n\n/**\n * Location renders the blurb about my location and the map.\n */\nclass Location extends Component {\n  render() {\n    return (\n      <div className=\"Section\" id=\"location\">\n        <div className=\"dev-grid\">\n          <div className=\"dev-grid-cell-one-quarter-height location-text\">\n            <div className=\"dev-grid-measurement-right\"></div>\n            <div className=\"dev-grid-measurement-bottom\"></div>\n            <div className=\"dev-grid-margin-center-up\" data-target=\"location-text-p\"></div>\n            <p id=\"location-text-p\">\n              I’m a software engineer based in Dublin, Ireland <span aria-label=\"Ireland Flag\" role=\"img\"> 🇮🇪</span>\n            </p>\n            <p>\n              I've been lucky enough to work with amazing people from <span aria-label=\"United States Flag\" role=\"img\"> 🇺🇸</span> to <span aria-label=\"Singapore Flag\" role=\"img\"> 🇸🇬</span>\n            </p>\n          </div>\n          <div className=\"dev-grid-cell-three-quarters-height\">\n            <div className=\"dev-grid-measurement-bottom\"></div>\n            <div className=\"dev-grid-margin-top-left-corner-left\" data-target=\"map\"></div>\n            <div className=\"dev-grid-margin-bottom-left-corner-down\" data-target=\"map\"></div>\n            <Map />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Location;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\n/**\n * Renders a floaty thing.\n */\nclass Floaty extends Component {\n  static defaultProps = {\n    numLayers: 3,\n  };\n\n  render() {\n    return (\n      <div className=\"floaty-container\">\n        {\n          [...Array(this.props.numLayers).keys()].map((_, idx) =>\n            <div aria-hidden=\"true\" className={`floaty-${idx+1}`} key={`floaty-${idx}`} />,\n          )\n        }\n        <div aria-hidden=\"true\" className=\"floaty-background\"/>\n      </div>\n    );\n  }\n}\n\nFloaty.propTypes = {\n  numLayers: PropTypes.number,\n};\n\nexport default Floaty;\n","export default __webpack_public_path__ + \"static/media/golang.002cae96.svg\";","export default __webpack_public_path__ + \"static/media/java.38de3186.svg\";","export default __webpack_public_path__ + \"static/media/js.acc4642f.svg\";","export default __webpack_public_path__ + \"static/media/python.063da199.svg\";","export default __webpack_public_path__ + \"static/media/ruby.5262162c.svg\";","export default __webpack_public_path__ + \"static/media/scala.1bc6f3ec.svg\";","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\n/**\n * The Tabs component renders a number of tabs and shows/hides the content of each tab based on the\n * user's selection.\n */\nclass Tabs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.select = this.select.bind(this);\n  }\n\n  static defaultProps = {\n    selected: 0,\n  };\n\n  state = { selected: this.props.selected };\n\n  /**\n   * Select a new tab.\n   *\n   * @param {Number} selected the index of the new selection.\n   */\n  select(selected) {\n    this.setState({ selected });\n  }\n\n  /**\n   * Render the tabs for user selection.\n   */\n  renderTabs() {\n    return React.Children.map(this.props.children, (child, index) => {\n      return React.cloneElement(child, {\n        select: this.select,\n        index: index,\n        selected: index === this.state.selected,\n      });\n    });\n  }\n\n  /**\n   * Render the content of the selected tab.\n   */\n  renderContent() {\n    const children = this.props.children;\n    const selected = this.state.selected;\n    if(children[selected]) {\n      return children[selected].props.children;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"tabs\">\n        <div className=\"tabs-navigation\">\n          {this.renderTabs()}\n        </div>\n        <div className=\"tabs-content\">\n          {this.renderContent()}\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * Tabs contains multiple Tab elements.\n */\nclass Tab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.select = this.select.bind(this);\n  }\n\n  /**\n   * Select the current tab.\n   */\n  select() {\n    this.props.select(this.props.index);\n  }\n\n  render() {\n    return (\n      <button className={\"tabs-tab \" + (this.props.selected ? \"active\" : \"\")} onClick={(e) => {\n        e.preventDefault();\n        this.select();\n      }}>\n        {this.props.title}\n      </button>\n    );\n  }\n}\n\nTab.propTypes = {\n  select: PropTypes.func,\n  selected: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nexport { Tabs, Tab };","\nimport React, { Component } from 'react';\nimport Floaty from '../floaty/Floaty';\nimport golang from '../img/languages/golang.svg';\nimport java from '../img/languages/java.svg';\nimport js from '../img/languages/js.svg';\nimport python from '../img/languages/python.svg';\nimport ruby from '../img/languages/ruby.svg';\nimport scala from '../img/languages/scala.svg';\nimport { Tab, Tabs } from '../tabs/Tabs';\n\n/**\n * Skills renders the current and past skills section.\n */\nclass Skills extends Component {\n  render() {\n    return (\n      <div className=\"Section\" id=\"skills\">\n        <Floaty numLayers={3} />\n        <Tabs>\n          { SKILLS.map(genSkillEraTab) }\n        </Tabs>\n      </div>\n    );\n  }\n}\n\n/**\n * Generates a Tab element for an era of skills.\n *\n * @param {Object} era the skill to render.\n * @returns the Tab JSX element.\n */\nconst genSkillEraTab = (era) => {\n  return (\n    <Tab key={era.title} title={era.title}>\n      <div className=\"skills-container dev-grid\">\n        { era.skills.map(genSkillRow) }\n      </div>\n    </Tab>\n  );\n};\n\n/**\n * Generate a row that contains the skill name and it's rating.\n *\n * @param {Object} skill the skill to render.\n */\nconst genSkillRow = (skill) => {\n  const safeTitle = skill.title.replace(/[\\W_]+/g,\" \");\n  const containerId = `skill-${safeTitle}-logo-container`;\n  const logoImgId = `skill-${safeTitle}-logo-img`;\n  const starsId = `skill-${safeTitle}-stars`;\n\n  return (\n    <div className=\"dev-grid-cell skills-container-skill\" key={ skill.title }>\n      <div className=\"dev-grid-margin-between\" data-target-one={ containerId } data-target-two={ starsId } />\n      <div className=\"dev-grid-margin-center-up\" data-target={ logoImgId } />\n      <div id={ containerId } className=\"skills-container-skill-name-logo\">\n        <div id={ logoImgId } className=\"skills-container-skill-logo\"><img alt={ skill.title } src={ skill.logo } /></div>\n        <div id={ starsId } className=\"skills-container-skill-name\">{ skill.title }</div>\n      </div>\n      <div\n        id={ starsId}\n        aria-label={ skill.stars + \" stars\" }\n        className=\"skills-container-skill-rating\">\n        { genStars(skill.stars) }\n      </div>\n    </div>\n  );\n};\n\n/**\n * Generate a row of stars.\n *\n * @param {Number} numFilledStars of stars to render.\n */\nconst genStars = (numFilledStars) => {\n  const firstThree = (\n    <div className=\"avoid-wrap\">\n      {genStar(numFilledStars > 0, 1)}\n      {genStar(numFilledStars > 1, 2)}\n      {genStar(numFilledStars > 2, 3)}\n    </div>\n  );\n  const lastTwo = (\n    <div className=\"avoid-wrap\">\n      {genStar(numFilledStars > 3, 4)}\n      {genStar(numFilledStars > 4, 5)}\n    </div>\n  );\n  return (\n    <div className=\"stars\">\n      {firstThree}\n      {lastTwo}\n    </div>\n  );\n};\n\n/**\n * Generate a star.\n *\n * @param {Boolean} filled whther the star is filled or hollow.\n * @param {String} key optional key for adding multiple stars in a row.\n */\nconst genStar = (filled, key) => {\n  return <i\n    aria-label=\"Gold star\"\n    className={filled? \"fas fa-star\" : \"far fa-star\"}\n    key={key}\n    role=\"presentation\"></i>;\n};\n\nconst JS = { title: \"Javascript & CSS\", logo: js };\nconst RUBY = { title: \"Ruby\", logo: ruby };\nconst SCALA = { title: \"Scala\", logo: scala };\nconst GOLANG = { title: \"Golang\", logo: golang };\nconst PYTHON = { title: \"Python\", logo: python };\nconst JAVA = { title: \"Java\", logo: java };\n\nconst SKILLS = [\n  {\n    title: \"Today\",\n    skills: [\n      { ...JS, stars: 5 },\n      { ...RUBY, stars: 4 },\n      { ...SCALA, stars: 3 },\n      { ...GOLANG, stars: 3 },\n    ],\n  },\n  {\n    title: \"2020\",\n    skills: [\n      { ...RUBY, stars: 5 },\n      { ...JS, stars: 4 },\n      { ...SCALA, stars: 3 },\n      { ...GOLANG, stars: 2 },\n\n    ],\n  },\n  {\n    title: \"2018\",\n    skills: [\n      { ...SCALA, stars: 5 },\n      { ...RUBY, stars: 4 },\n      { ...JS, stars: 3 },\n      { ...PYTHON, stars: 2 },\n    ],\n  },\n  {\n    title: \"2016\",\n    skills: [\n      { ...JAVA, stars: 5 },\n      { ...RUBY, stars: 4 },\n      { ...JS, stars: 4 },\n      { ...SCALA, stars: 3 },\n\n    ],\n  },\n];\n\nexport default Skills;\n","import React, { Component } from 'react';\nimport Contact from '../contact/Contact';\nimport Devgrid from '../devgrid/Devgrid';\nimport Education from '../education/Education';\nimport Experience from '../experience/Experience';\nimport Header from '../header/Header';\nimport Learning from '../learning/Learning';\nimport Location from '../location/Location';\nimport Skills from '../skills/Skills';\n\n/**,\n * The main driver and parent container for the app.\n */\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Devgrid />\n        <Header />\n        <Location />\n        <Experience />\n        <Learning />\n        <Skills />\n        <Education />\n        {/* <Contact /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import './index.css';\n\nimport App from './app/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Hide gret selection boxes on mobile\ndocument.addEventListener(\"touchstart\", function(){}, true);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}