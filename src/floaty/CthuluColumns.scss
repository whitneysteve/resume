
$column-height: 500;
$column-palette: [ $white ];
$column-width: 95;

@function generate-vertical-columns ($x) {
  $column-color: nth($column-palette, random(length($column-palette)));
  $y: 0 - random(3000);
  $value: '#{$x}px #{$y}px #{$column-color}';

  @while $y < 3000 {
    $y: $y + 1 + $column_height;
    $value: '#{$value} , #{$x}px #{$y}px #{$column-color}';
  }

  @return unquote($value);
}

@function generate-horizontal-items ($start, $n) {
  $x: $start;
  $value: generate-vertical-columns($start);

  @for $i from 1 through $n {
    $x: $start + (2 * $i * $column-width);
    $value: '#{$value} , #{generate-vertical-columns($x)}';
  }

  @return unquote($value);
}

$upwards-columns: generate-horizontal-items(0, 100);
$downwards-columns: generate-horizontal-items($column-width, 100);
$around: generate-horizontal-items($column-width, 100);

@keyframes column-up {
  from {
    transform: rotate(1deg) translateY(0px);
  }
  to {
    transform: rotate(1deg) translateY(-2000px);
  }
}


@keyframes column-down {
  from {
    transform: rotate(1deg) translateY(-2000px);
  }
  to {
    transform: rotate(1deg) translateY(0px);
  }
}

.cthulu-columns-container {
  background-color: #e1e8ef;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  height: 1900px !important;

  justify-content: space-evenly;
  left: 0;
  min-width: 40%;
  overflow: hidden;
  position: absolute;
  text-align: center;
  top: 0;
  width: 100%;
  z-index: -3;

  @mixin cthulu-column() {
    animation-direction: alternate;
    background: transparent;
    height: #{$column-height}px;
    left: -#{$column-width}px;
    position: absolute;
    top: 0;
    width: #{$column-width - 1}px;
    z-index: -1;
  }

  .cthulu-column-up {
    @include cthulu-column();
    animation: column-up 18s linear infinite;
    box-shadow: $upwards-columns;
  }

  .cthulu-column-down {
    @include cthulu-column();
    animation: column-down 14s linear infinite;
    box-shadow: $downwards-columns;
  }
}
